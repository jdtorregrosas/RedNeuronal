% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
% Created Tue Dec 09 00:16:18 COT 2014
%
% This script assumes these variables are defined:
%
%   ins - input data.
%   targs - target data.
targs = [];
for kind = 1:26
    cols = [];
    for num = 1:times(1)
        disp(Y(num,36));
        if (Y(num,36) == kind)
            cols = [cols 1];
        else
            cols = [cols 0];
        end
    end
    targs = [targs cols'];
end
x = p';
t = targs';

% Create a Pattern Recognition Network
hiddenLayerSize = 20;
net = patternnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
[net,tr] = train(net,x,t);
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
tind = vec2ind(t);
yind = vec2ind(y);
percentErrors = sum(tind ~= yind)/numel(tind);
performance = perform(net,t,y)

% View the Network
view(net)
save('net.mat','net');
save('x.mat','x');
save('t.mat','t');
% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotconfusion(t,y)
%figure, plotroc(t,y)
%figure, ploterrhist(e)

